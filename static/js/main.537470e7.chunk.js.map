{"version":3,"sources":["Graph.js","App.js","reportWebVitals.js","index.js"],"names":["withSize","monitorHeight","size","fgRef","React","useRef","data","useMemo","Object","entries","orgData","links","link","a","nodes","source","id","b","target","neighbors","Set","add","push","useState","highlightNodes","setHighlightNodes","highlightLinks","setHighlightLinks","hoverNode","setHoverNode","graphLoaded","setGraphLoaded","inverseSphereVolume","vol","Math","pow","PI","getColorFromSubregion","subregion","useEffect","current","d3Force","forceX","forceY","forceZ","strength","console","log","className","ref","width","height","graphData","values","nodeVal","node","gdp","enableNodeDrag","nodeThreeObject","color","opacity","has","THREE","transparent","linkColor","linkOpacity","nodeOpacity","onNodeClick","clear","forEach","neighbor","tmp","onEngineTick","linkDirectionalParticleWidth","linkDirectionalParticles","alpha2","toUpperCase","replace","char","String","fromCodePoint","charCodeAt","name","Fragment","Array","from","map","country","reduce","toFixed","onClick","App","href","rel","bannerColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.537470e7.chunk.js","sourcesContent":["import React from \"react\"\nimport ForceGraph3D from \"react-force-graph-3d\"\nimport orgData from \"./data.json\"\n// import rtas from \"./rtas.json\"\nimport { forceX, forceY, forceZ } from 'd3-force-3d'\nimport * as THREE from 'three'\nimport { withSize } from 'react-sizeme'\n\n// function numberToColor(number, alpha=1) {\n// \tconst r = (number & 0xff0000) >> 16;\n// \tconst g = (number & 0x00ff00) >> 8;\n// \tconst b = (number & 0x0000ff);\n// \treturn `rgba(${b},${g},${r},${alpha})`;\n// }\n\nfunction Graph({ size }) {\n\n\tconst fgRef = React.useRef();\n\n\tconst data = React.useMemo(() => {\n\t\tfor (const [key, link] of Object.entries(orgData.links)) {\n\t\t\tconst a = orgData.nodes[link.source] || orgData.nodes[link.source.id]\n\t\t\tconst b = orgData.nodes[link.target] || orgData.nodes[link.target.id]\n\t\t\t// if (a == undefined || b == undefined)\n\t\t\t// \treturn {nodes: [], links: []}\n\t\t\t!a.neighbors && (a.neighbors = new Set());\n\t\t\t!b.neighbors && (b.neighbors = new Set());\n\t\t\ta.neighbors.add(b);\n\t\t\tb.neighbors.add(a);\n\n\t\t\t!a.links && (a.links = []);\n\t\t\t!b.links && (b.links = []);\n\t\t\ta.links.push(link);\n\t\t\tb.links.push(link);\n\t\t}\n\t\treturn orgData\n\t}, [])\n\n\tconst [highlightNodes, setHighlightNodes] = React.useState(new Set());\n\tconst [highlightLinks, setHighlightLinks] = React.useState(new Set());\n\tconst [hoverNode, setHoverNode] = React.useState(null);\n\tconst [graphLoaded, setGraphLoaded] = React.useState(false);\n\n\tconst handleNodeClick = node => {\n\t\thighlightNodes.clear();\n\t\thighlightLinks.clear();\n\t\tif (node) {\n\t\t\thighlightNodes.add(node);\n\t\t\tnode.neighbors && node.neighbors.forEach(neighbor => highlightNodes.add(neighbor));\n\t\t\tnode.links && node.links.forEach(link => highlightLinks.add(link));\n\t\t}\n\n\t\tsetHoverNode(node || null);\n\t\t// fgRef.current.refresh()\n\t\tsetHighlightNodes(highlightNodes);\n\t\tsetHighlightLinks(highlightLinks);\n\n\t\thighlightLinks.forEach(link => {\n\t\t\t// console.log(link.target)\n\t\t\t// console.log(node)\n\t\t\tif (link.target === node) {\n\t\t\t\tconst tmp = link.target\n\t\t\t\tlink.target = link.source\n\t\t\t\tlink.source = tmp\n\t\t\t}\n\t\t\t// fgRef.current.emitParticle(link)\n\t\t})\n\t};\n\n\tReact.useEffect(() => {\n\t\t// add collision force\n\t\tfgRef.current.d3Force('centerX', forceX(0));\n\t\tfgRef.current.d3Force('centerY', forceY(0));\n\t\tfgRef.current.d3Force('centerZ', forceZ(0));\n\t\t// fgRef.current.d3Force('link').strength(2);\n\t\t// fgRef.current.d3Force('link').distance(link => 100 / link.rtas.length);\n\t\tfgRef.current.d3Force('charge').strength(-200);\n\t\t// fgRef.current.d3Force('collision', forceCollide(80))\n\t}, [graphLoaded]);\n\n\tfunction inverseSphereVolume(vol) {\n\t\t// v = 4/3 pi r^3 => r = (3/4pi v)^(1/3)\n\t\treturn Math.pow(3 / (4*Math.PI) * vol, 1/3)\n\t}\n\n\tfunction getColorFromSubregion(subregion) {\n\t\tswitch(subregion) {\n\t\t\tcase 'Northern America': return 0xFFCC00\n\t\t\tcase 'Latin America and the Caribbean': return 0xF6B40E\n\n\t\t\tcase 'Western Europe': return 0x003399\n\t\t\tcase 'Southern Europe': return 0x003399\n\t\t\tcase 'Northern Europe': return 0x4c70b7\n\t\t\tcase 'Eastern Europe': return 0xDA291C\n\n\t\t\tcase 'Northern Africa': return 0xc2b280\n\t\t\tcase 'Sub-Saharan Africa': return 0x01853F\n\n\t\t\tcase 'Western Asia': return 0x9cbf5a\n\t\t\tcase 'Southern Asia': return 0xFF9933\n\t\t\tcase 'Central Asia': return 0x8d4eba\n\t\t\tcase 'Eastern Asia': return 0xAA381E\n\t\t\tcase 'South-eastern Asia': return 0x8b30bf\n\n\t\t\tcase 'Australia and New Zealand': return 0x48D1CC\n\t\t\tcase 'Polynesia': return 0x48D1CC\n\t\t\tcase 'Melanesia': return 0x48D1CC\n\t\t\tcase 'Micronesia': return 0x48D1CC\n\t\t\tcase 'Antarctica': return 0x48D1CC\n\t\t\tdefault: return 0x666666\n\t\t}\n\t}\n\n\tfunction getLinkColor(link) {\n\t\tif (hoverNode !== null) {\n\t\t\tif (highlightLinks.has(link)) {\n\t\t\t\t// if (link.source.subregion === link.target.subregion)\n\t\t\t\t// \treturn 0xffffff\n\t\t\t\treturn getColorFromSubregion(link.target.subregion)\n\t\t\t\t// return `rgba(255, 255, 255, 0.8)`\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn `rgba(180, 180, 180, 0.1)`\n\t\t\t}\n\t\t}\n\t\treturn `rgba(255, 255, 255, 0.1)`\n\t}\n\n\tfunction drawNode(node) {\n\t\tlet color = getColorFromSubregion(node.subregion)\n\t\tlet opacity = 0.75\n\t\tif (hoverNode !== null) {\n\t\t\tif (hoverNode === node) {\n\t\t\t\tcolor = 0xffffff\n\t\t\t\topacity = 1\n\t\t\t}\n\t\t\telse if (highlightNodes.has(node)) {\n\t\t\t\topacity = 0.9\n\t\t\t}\n\t\t\telse {\n\t\t\t\topacity = 0.4\n\t\t\t}\n\t\t}\n\t\treturn new THREE.Mesh(\n\t\t\tnew THREE.SphereGeometry(inverseSphereVolume(node.gdp*1e-9) * 1.5, 16, 16),\n\t\t\tnew THREE.MeshStandardMaterial( {color: color, opacity: opacity, transparent: true} )\n\t\t)\n\t}\n\n\tfunction clearSelection() {\n\t\tsetHoverNode(null)\n\t\thighlightNodes.clear()\n\t\thighlightLinks.clear()\n\t}\n\n\tconsole.log(hoverNode)\n\n\treturn(\n\t\t<div id=\"canvas\">\n\t\t\t{!graphLoaded && <div className=\"center full\">Loading RTAs...</div>}\n\t\t\t<ForceGraph3D\n\t\t\t\tref={fgRef}\n\t\t\t\twidth={size.width}\n\t\t\t\theight={size.height}\n\t\t\t\tgraphData={{nodes: Object.values(data.nodes), links: Object.values(data.links)}}\n\t\t\t\tnodeVal={node => inverseSphereVolume(node.gdp*1e-9)}\n\t\t\t\tenableNodeDrag={false}\n\t\t\t\t// nodeColor={getNodeColor}\n\t\t\t\tnodeThreeObject={drawNode}\n\t\t\t\tlinkColor={getLinkColor}\n\t\t\t\t// linkWidth={link => highlightLinks.has(link) ? 2 : 0}\n\t\t\t\tlinkOpacity={1}\n\t\t\t\tnodeOpacity={1}\n\t\t\t\tonNodeClick={handleNodeClick}\n\t\t\t\tonEngineTick={() => setGraphLoaded(true)}\n\t\t\t\tlinkDirectionalParticleWidth={2}\n\t\t\t\tlinkDirectionalParticles={link => highlightLinks.has(link) ? 3 : 0}\n\t\t\t\t// linkDirectionalParticleColor={link => getColorFromSubregion(link.source.subregion)}\n\t\t\t/>\n\t\t\t{graphLoaded && hoverNode &&\n\t\t\t\t<div className=\"control-panel\">\n\t\t\t\t\t<div>{hoverNode.alpha2.toUpperCase().replace(/./g, char => String.fromCodePoint(char.charCodeAt(0)+127397))} {hoverNode.name}</div>\n\t\t\t\t\t<div>Neighbors: {hoverNode.neighbors\n\t\t\t\t\t\t? <React.Fragment>{hoverNode.neighbors.size} (combined GDP = {((Array.from(hoverNode.neighbors).map(country => country.gdp).reduce((a, b) => a + b, 0)) * 1e-12).toFixed(2)} trillion GK$)</React.Fragment>\n\t\t\t\t\t\t: 0}\t\n\t\t\t\t\t</div>\n\t\t\t\t\t<div onClick={clearSelection}>Clear Selection</div>\n\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nexport default withSize({ monitorHeight: true })(Graph)","import './App.css';\nimport Graph from './Graph'\nimport GithubCorner from 'react-github-corner';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Graph />\n      <GithubCorner\n      \thref=\"https://github.com/artt/rta-network\"\n      \ttarget=\"_blank\"\n      \trel=\"noopener noreferrer\"\n      \tbannerColor=\"#20635d\"\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}